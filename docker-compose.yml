# источник https://www.youtube.com/watch?v=h6qwp5ySNEE&list=PLd2_Os8Cj3t9Ert8mBlNl1UqwllyP1Tm_&index=10

#версия докера
version: '3'

services:
# название сервиса 1
    nginx:
        image: nginx:latest
        volumes:
#   подключаем папку public, всё что там содержится у пути ./:/var/www/
            - ./:/var/www
# подключаем конфиг nginx. conf из папки /nginx/conf.d, передаём путь /etc/nginx/conf.d  папке /nginx/conf.d
            - ./_docker/nginx/conf.d:/etc/nginx/conf.d
        ports:
#  8876 - внешний порт 80 - внутренний порт докера
            - "8876:80"
# условие запускаем app только если работает корректно работает сервис php
        depends_on:
            - app
# указываем имя контейнера
        container_name: project_nginx

# название сервиса 2
    app:
        build:
#  указываем путь до файла
            context: .
            dockerfile: _docker/app/Dockerfile
        volumes:
            - ./:/var/www
 # условие запускаем app только если работает корректно работает сервис bd
        depends_on:
            - bd
        container_name: project_app

#  подключаем бд на основе     image: mysql:8.0
    db:
        image: mysql:8.0
#  перезапускаем базу всегда когда она упала
        restart: always
#  указываем место где храним данные на случай если база упвла, нужно заново перезаписать её
        volumes:
            - ./tmp/db:/var/lib/mysql
#  создаём переменные окружения
        environment:
#  название базы данных
            MYSQL_DATABASE: lardocker
            MYSQL_ROOT_PASSWORD: root
        ports:
          - 8101:3306
        command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci
        container_name: project_db



#      docker-compose up -d
#      docker-compose down

#      docker exec -it project_app bash
#   pho artisan migrate
